import { Button } from '@chakra-ui/button'

import { Input } from '@chakra-ui/input'
import { FaSun } from 'react-icons/fa'
import { Box, Flex, Spacer, Text } from '@chakra-ui/layout'
import Head from 'next/head'
import { useState } from 'react'
import TweetCard from '../components/tweetCard'
import useTwitterApi from '../hooks/useTwitterApi'
import { FormControl } from '@chakra-ui/form-control'

export default function Home () {

    
    const [username, setUsername] = useState('')
    const {isLoading, tweets, fetchTwitterApi, message, setMessage} = useTwitterApi(`/api/tweets/${username}`)

    const handleSubmit = (username) =>{
        if (!username){
            setMessage('You must enter a username')
            setTimeout(()=>{
                setMessage('')
            }, 5000)
        }else if(username > 2){
            setMessage('You must be more than 2 characters')
            setTimeout(()=>{
                setMessage('')
            }, 5000)
        }else{
            
            fetchTwitterApi()
        }
       
    }


  return (
    <Flex direction="column" w="100vw" h='auto'>
      <Head>
        <title>Best Tweets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

    <Flex direction='column' w="100%" h='auto'>
        {/* header */}
        <Flex  w='full' h='20' mb='20' pr={[
            '2',
            '5',
            '8',
            '10'
        ]}>
             <Spacer />
                <Box  p='4' h='10' w='10' alignItems='center' justifyContent='center'>
                      <FaSun size={20} />
                </Box>
              
        </Flex>
        {/* end of header */}
        {/* main section */}
        <Flex direction='column' justify='center' align='center' textAlign='center' w='full' h='full'>
            <Text fontSize='2xl' fontWeight='bold' m='2'>My Best Tweets ğŸš€</Text>
            <Text fontSize='xl' m='2' color='gray.400'>Find the best tweets posted by any user.</Text>
            <Flex direction='column'  m='4' justifyContent='center' alignItems='center'
            width={[
                "100vw", // base
                "80vw", // 480px upwards
                "80vw", // 768px upwards
                "50vw", // 992px upwards
                ]}
            >
            {message ? <Text> {message} </Text> : null }
               
                <Flex direction='row' m='2' h='12' 
                width={[
                "90vw", // base
                "80vw", // 480px upwards
                "80vw", // 768px upwards
                "40vw", // 992px upwards
                ]}
                >
               
                <Input 
                    value={username}
                    onChange={e=>{
                        e.preventDefault
                        setUsername(e.target.value)
                    }}
                    
                    placeholder='Enter name of handle' m='1' h='full' w='80%'/>
                <Button
                isLoading={isLoading}
                 onClick={()=>{
                    
                     handleSubmit(username)
                 }}
                 colorScheme='green' m='1' h='full' w='20%'>Submit</Button>
                </Flex>
                
                {/* tweets container */}
                <Flex direction='column' justifyContent='center' m='5' w='full'  alignItems='center'>
                   {/* tweet card */}
                       {
                        tweets.map(tweet=>{
                           
                            return(
                                <TweetCard 
                                key={tweet.id}
                                author_name={tweet["user"].name}
                                author_username={tweet["user"].screen_name}
                                tweet_location={tweet["user"].location}
                                tweet_text={tweet.text}
                                profile_image_url={tweet["user"].profile_image_url}
                                tweet_likes_count={tweet.favorite_count}
                                tweet_retweets_count={tweet.retweet_count}
                                
                            />
                            )
                            
                        })
                       }
                   {/* end of tweet card */}
                </Flex>
                {/* end of tweets container */}
                
            </Flex>
        </Flex>
        {/* end of main section */}
    </Flex>
    </Flex>
  )
}
